# SPDX-License-Identifier: AGPL-3.0-or-later
# Copyright (C) 2022-2023 Dyne.org foundation <foundation@dyne.org>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: üß™ & üöÄ
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]

    name: Test on Node v${{ matrix.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Git Sumbodule Update
        run: |
          git submodule update --init
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Write local env file
        run: cp .env.example .env.local
      - run: pnpm run build
      - name: Save build folder üÜô
        uses: actions/upload-artifact@v3
        with:
          name: built
          if-no-files-found: error
          path: .next
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      - name: Download the built folders ‚è¨
        uses: actions/download-artifact@v3
        with:
          name: built
          path: .next
      - name: Run the build folder
        run: pnpm run start
      # - name: Install Playwright Browsers
      #   run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: üöÄ Deploy on staging server
    # needs: [e2e, components]
    needs: [test]
    if: github.ref == 'refs/heads/main'
    uses: interfacerproject/workflows/.github/workflows/node-staging-deploy.yml@main
    secrets: inherit
    with:
      deploy_url: https://interfacer-gui-staging.dyne.org
